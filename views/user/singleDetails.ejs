<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>LAXELANE-Lane to your style</title>
    <meta name="keywords" content="HTML5 Template">
    <meta name="description" content="LAXELANE - Fashion eCommerce Template">
    <meta name="author" content="LAXELANE">
    
    <!-- Favicon -->
    <link rel="apple-touch-icon" sizes="180x180" href="/assets/images/icons/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/assets/images/icons/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/assets/images/icons/favicon-16x16.png">
    <link rel="manifest" href="/assets/images/icons/site.webmanifest">
    <link rel="mask-icon" href="/assets/images/icons/safari-pinned-tab.svg" color="#666666">
    <link rel="shortcut icon" href="/assets/images/icons/favicon.ico">
    
    <!-- CSS Files -->
    <link rel="stylesheet" href="/assets/css/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/css/jquery.zoom.css">
    <link rel="stylesheet" href="/assets/css/style.css">
    <link rel="stylesheet" href="/assets/css/plugins/owl-carousel/owl.carousel.css">
    <link rel="stylesheet" href="/assets/css/plugins/magnific-popup/magnific-popup.css">
    <link rel="stylesheet" href="/assets/css/plugins/nouislider/nouislider.css">
    
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-zoom/1.7.21/jquery.zoom.min.js"></script>
    
    <style>
        .product-price {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .current-price {
            font-size: 20px;
            font-weight: bold;
            color: #e60023;
        }
        
        .original-price {
            font-size: 16px;
            color: #777;
            text-decoration: line-through;
        }

        .imf {
            overflow: hidden;
        }

        .imf img {
            transform: scale(var(--zoom, 1));
            object-fit: cover;
            transform-origin: var(--x) var(--y);
            transition: cubic-bezier(0.18, 0.9, 0.33, 1.01) 1s;
        }

        .imf:hover {
            --zoom: 1.8;
            cursor: crosshair;
        }

        body::-webkit-scrollbar {
            width: 0;
        }

        .product-gallery-item:before {
            opacity: 0;
            visibility: hidden !important;
            border: 0.1rem solid #c96;
        }
         
      
        
    </style>
</head>

<body>
    <div class="page-wrapper">
        <%- include("../../views/partials/user/header") %>

        <main class="main">
            <!-- Breadcrumb -->
            <nav aria-label="breadcrumb" class="breadcrumb-nav border-0 mb-0">
                <div class="container d-flex align-items-center">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/">Home</a></li>
                        <li class="breadcrumb-item"><a href="/shop">Shop</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Product Details</li>
                    </ol>

                    <nav class="product-pager ml-auto" aria-label="Product">
                        <a class="product-pager-link product-pager-prev" href="/shop" aria-label="Previous" tabindex="-1">
                            <i class="icon-angle-left"></i>
                            <span>Prev</span>
                        </a>

                        <a class="product-pager-link product-pager-next" href="#" aria-label="Next" tabindex="-1">
                            <span>Next</span>
                            <i class="icon-angle-right"></i>
                        </a>
                    </nav>
                </div>
            </nav>

            <div class="page-content">
                <div class="container">
                    <div class="product-details-top">
                        <div class="row">
                            <!-- Product Gallery -->
                            <div class="col-md-6">
                                <div class="product-gallery product-gallery-vertical">
                                    <div class="row">
                                        <figure class="product-main-image imf">
                                            <img id="product-zoom" 
                                                 src="/uploads/re-image/<%= product.productImage[0] %>" 
                                                 data-zoom-image="/uploads/re-image/<%= product.productImage[0] %>" 
                                                 alt="<%= product.productName %>">
                                            
                                            <a href="#" id="btn-product-gallery" class="btn-product-gallery">
                                                <i class="icon-arrows"></i>
                                            </a>
                                        </figure>

                                        <div id="product-zoom-gallery" class="product-image-gallery">
                                            <% product.productImage.forEach((image, index) => { %>
                                                <a class="product-gallery-item <%= index === 0 ? 'active' : '' %>" 
                                                   href="#" 
                                                   data-image="/uploads/re-image/<%= image %>" 
                                                   data-zoom-image="/uploads/re-image/<%= image %>">
                                                    <img src="/uploads/re-image/<%= image %>" 
                                                         alt="<%= product.productName %> view <%= index + 1 %>">
                                                </a>
                                            <% }); %>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Product Details -->
                            <div class="col-md-6">
                                <div class="product-details">
                                    <h1 class="product-title"><%= product.productName %></h1>

                                    <!-- <div class="ratings-container">
                                        <div class="ratings">
                                            <div class="ratings-val"></div>
                                        </div>
                                    </div> -->

                                    <div class="product-price">
                                        <span class="current-price">₹<%= product.salePrice.toLocaleString('en-IN') %></span>
                                        <span class="original-price">₹<%= product.regularPrice.toLocaleString('en-IN') %></span>
                                    </div>

                                    <!-- Color Selection -->
                                    <div class="details-filter-row details-row-size">
                                        <label>Color:</label>
                                        <div class="product-nav product-nav-thumbs">
                                            <%= product.color %>
                                        </div>
                                    </div>

                                    <!-- Size Selection -->
                                    <div class="details-filter-row details-row-size">
                                        <label for="size">Size:</label>
                                        <div class="select-custom">
                                            <select name="size" id="size" class="form-control">
                                                <option value="" selected>Select a size</option>
                                                <% product.sizes.forEach(sizeObj => { %>
                                                    <option value="<%= sizeObj.size %>"><%= sizeObj.size %></option>
                                                <% }) %>
                                            </select>
                                        </div>
                                        <a href="#" class="size-guide"><i class="icon-th-list"></i>Size Guide</a>
                                    </div>

                                    <!-- Quantity Selection -->
                                    <div class="details-filter-row details-row-size">
                                        <label for="qty">Qty:</label>
                                        <div class="product-details-quantity">
                                            <input type="number" id="qty" class="form-control" value="1" min="1" max="10" step="1" disabled>
                                        </div>
                                        <span id="stock-message" style="color: red;"></span>
                                    </div>
                                    <script>
                                        document.getElementById('qty').addEventListener('input', function () {
                                            let qty = parseInt(this.value);
                                            let maxLimit = 10;
                                    
                                            if (qty > maxLimit) {
                                                this.value = maxLimit;
                                                document.getElementById('stock-message').textContent = "Maximum limit reached!";
                                            } else {
                                                document.getElementById('stock-message').textContent = "";
                                            }
                                        });
                                    </script>
                                  <!-- Stock Data (JSON) -->
<script id="stock-data" type="application/json">
    <%- JSON.stringify(
        product.sizes.reduce((acc, sizeObj) => {
            acc[sizeObj.size] = sizeObj.quantity;
            return acc;
        }, {})
    ) %>
</script>
                                   
                                    
                               <div class="details-filter-row details-row-size" >

                                <label for="qty">Stock:</label>

                                <div class="product-details-quantity">

                                    <input type="number" id="stock" class="form-control" value="<%= product.stock %> ? <%=product.stock%>": '0' disabled>


                                </div><!-- End .product-stock -->

                                </div>
                                </div>
                                    <!-- Action Buttons -->
                                    <div class="product-details-action">
                                        <!-- <button id="btns" class="btn-product btn-cart" onclick="handleAddToCart()"><span id="crt">add to cart</span>
                                        </button>    
                                                    -->
                                                    <button class="btn-product btn-cart" data-product-id="<%=product._id%>">Add to cart</button>

                                        <div class="details-action-wrapper">
                                            <a href="/wishlist" class="btn-product btn-wishlist" title="Wishlist"><span>Add to Wishlist</span></a>
                                        </div>
                                    </div>

                                    <!-- Product Meta -->
                                    <div class="product-details-footer">
                                        <div class="product-cat">
                                            <span>Category:</span>
                                            <a href="/category/<%= product.category._id %>"><%= product.category.name %></a>
                                        </div>

                                        <div class="social-icons social-icons-sm">
                                            <span class="social-label">Share:</span>
                                            <a href="#" class="social-icon" title="Facebook" target="_blank"><i class="icon-facebook-f"></i></a>
                                            <a href="#" class="social-icon" title="Twitter" target="_blank"><i class="icon-twitter"></i></a>
                                            <a href="#" class="social-icon" title="Instagram" target="_blank"><i class="icon-instagram"></i></a>
                                            <a href="#" class="social-icon" title="Pinterest" target="_blank"><i class="icon-pinterest"></i></a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Product Description -->
                    <div class="product-details-tab">
                        <ul class="nav nav-pills justify-content-center" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="product-desc-link" data-toggle="tab" href="#product-desc-tab" role="tab" aria-controls="product-desc-tab" aria-selected="true">Description</a>
                            </li>
                        </ul>
                        
                        <div class="tab-content">
                            <div class="tab-pane fade show active" id="product-desc-tab" role="tabpanel" aria-labelledby="product-desc-link">
                                <div class="product-desc-content">
                                    <h3>Product Information</h3>
                                    <p><%= product.description %></p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Related Products -->
                    <% if (relatedProducts && relatedProducts.length > 0) { %>
                        <div class="container">
                            <h2 class="title text-center mb-4">Related Products</h2>
                            <div class="owl-carousel owl-theme products-carousel">
                                <% relatedProducts.forEach(function(relatedProduct) { %>
                                    <% if (relatedProduct._id.toString() !== product._id.toString()) { %>
                                        <div class="product">
                                            <figure class="product-media">
                                                <a href="/productDetails/<%= relatedProduct._id %>">
                                                    <img src="/uploads/re-image/<%= relatedProduct.productImage[0] %>" 
                                                         alt="<%= relatedProduct.productName %>"
                                                         class="product-image">
                                                </a>
                                                <div class="product-action">
                                                    <button class="btn-product btn-cart" data-product-id="<%= relatedProduct._id %>">
                                                        <span>Add to Cart</span>
                                                    </button>
                                                </div>
                                            </figure>
                                            <div class="product-body">
                                                <div class="product-cat">
                                                    <a href="/productDetails/<%= relatedProduct._id %>">
                                                        <%= relatedProduct.category.name %>
                                                    </a>
                                                </div>
                                                <h3 class="product-title">
                                                    <a href="/productDetails/<%= relatedProduct._id %>">
                                                        <%= relatedProduct.productName %>
                                                    </a>
                                                </h3>
                                                <div class="product-price">
                                                    <span class="current-price">₹<%= relatedProduct.salePrice.toLocaleString('en-IN') %></span>
                                                    <span class="original-price">₹<%= relatedProduct.regularPrice.toLocaleString('en-IN') %></span>
                                                </div>
                                            </div>
                                        </div>
                                    <% } %>
                                <% }); %>
                            </div>
                        </div>
                    <% } %>
                </div>
            </div>
        </main>

        <%- include("../../views/partials/user/footer") %>
    </div>

    <button id="scroll-top" title="Back to Top"><i class="icon-arrow-up"></i></button>

    <%- include("../../views/partials/user/mobileView") %>

    <!-- Scripts -->
    <script src="/assets/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/js/jquery.hoverIntent.min.js"></script>
    <script src="/assets/js/jquery.waypoints.min.js"></script>
    <script src="/assets/js/superfish.min.js"></script>
    <script src="/assets/js/owl.carousel.min.js"></script>
    <script src="/assets/js/wNumb.js"></script>
    <script src="/assets/js/bootstrap-input-spinner.js"></script>
    <script src="/assets/js/jquery.magnific-popup.min.js"></script>
    <script src="/assets/js/nouislider.min.js"></script>

   <!-- SweetAlert2 CDN -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


    <script>
        document.addEventListener("DOMContentLoaded", function() {
    // Initialize variables
    const stockData = JSON.parse(document.getElementById('stock-data')?.textContent || '{}');
    const sizeSelect = document.getElementById('size');
    const qtyInput = document.getElementById('qty');
    const stockInput = document.getElementById('stock');
    const stockMessage = document.getElementById('stock-message');
    const MAX_PURCHASE_LIMIT = 10;

    // Product carousel initialization
    if (typeof jQuery !== 'undefined' && typeof jQuery.fn.owlCarousel !== 'undefined') {
        const carouselElement = $('.products-carousel');
        if (carouselElement.length > 0) {
            carouselElement.owlCarousel({
                loop: true,
                margin: 20,
                nav: true,
                navText: ['<i class="icon-angle-left"></i>', '<i class="icon-angle-right"></i>'],
                dots: false,
                responsive: {
                    0: { items: 1 },
                    576: { items: 2 },
                    992: { items: 3 },
                    1200: { items: 4 }
                },
                autoplay: false
            });
        }
    }

    // Helper function for showing alerts
    function showAlert(title, text, icon = "warning") {
        return Swal.fire({
            title,
            text,
            icon,
            confirmButtonColor: "#3085d6",
            showConfirmButton: true
        });
    }

    // Size selection handler
    sizeSelect?.addEventListener('change', function() {
        const selectedSize = this.value;
        const availableStock = stockData[selectedSize] || 0;

        if (stockInput) stockInput.value = availableStock;

        if (availableStock > 0) {
            qtyInput.disabled = false;
            qtyInput.max = Math.min(availableStock, MAX_PURCHASE_LIMIT);
            qtyInput.value = 1;
            stockMessage.textContent = "";
        } else {
            qtyInput.disabled = true;
            qtyInput.value = 0;
            stockMessage.textContent = "Out of stock!";
        }
    });

    // Quantity input handler
    qtyInput?.addEventListener('input', function() {
        if (!sizeSelect.value) {
            showAlert("Size Required", "Please select a size first", "error");
            this.value = 0;
            return;
        }

        let qty = parseInt(this.value) || 0;
        const selectedSize = sizeSelect.value;
        const availableStock = stockData[selectedSize] || 0;

        if (qty > MAX_PURCHASE_LIMIT) {
            this.value = MAX_PURCHASE_LIMIT;
            showAlert("Purchase Limit", `Maximum ${MAX_PURCHASE_LIMIT} items per order`);
            qty = MAX_PURCHASE_LIMIT;
        } else if (qty > availableStock) {
            this.value = availableStock;
            showAlert("Stock Limit", `Only ${availableStock} items available`);
            qty = availableStock;
        }

        if (stockMessage) {
            stockMessage.textContent = qty === MAX_PURCHASE_LIMIT ? "Maximum purchase limit reached!" :
                                     qty === availableStock ? "Maximum available stock reached!" : "";
        }
    });

   




async function handleAddToCart(productId, selectedSize, quantity) {
    try {
        // Validation checks
        if (!selectedSize) {
            throw new Error("Please select a size");
        }

        if (!quantity || quantity === 0) {
            throw new Error("Please select a valid quantity");
        }

        const availableStock = stockData[selectedSize] || 0;
        if (quantity > availableStock) {
            throw new Error(`Only ${availableStock} items available in stock`);
        }

        if (quantity > MAX_PURCHASE_LIMIT) {
            throw new Error(`Maximum ${MAX_PURCHASE_LIMIT} items per order`);
        }

        // Log request details for debugging
        console.log("Adding to cart:", { productId, size: selectedSize, quantity });

        const response = await fetch('/add-to-cart', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ productId, size: selectedSize, quantity })
        });

        // Log the raw response for debugging
        console.log("Response status:", response.status);
        
        const responseText = await response.text();
        console.log("Response text:", responseText);

        // Parse the response with error handling
        let data;
        try {
            data = JSON.parse(responseText);
            console.log("Parsed response data:", data);
        } catch (e) {
            console.error("JSON parse error:", e);
            throw new Error("Invalid response from server");
        }

        // Check explicitly for the exist property
        if (data && data.exist === true) {
            console.log("Item already exists in cart");
            Swal.fire({
                title: "Already in Cart",
                text: "This item is already in your cart",
                icon: "info",
                confirmButtonColor: "#3085d6",
                showConfirmButton: true
            });
            return; // Important: stop execution here
        }

        // Handle unsuccessful response
        if (!response.ok) {
            throw new Error(data.message || 'Failed to add item to cart');
        }

        // Handle successful response
        if (data && data.success) {
            Swal.fire({
                title: "Success",
                text: "Item added to cart",
                icon: "success",
                confirmButtonColor: "#3085d6",
                showConfirmButton: true
            });

            // Update cart count
            const cartCount = document.querySelector('.cart-count');
            if (cartCount && data.cartCount) {
                cartCount.textContent = data.cartCount;
            }
        } else {
            throw new Error(data.message || 'Unknown error occurred');
        }

    } catch (error) {
        console.error('Add to cart error:', error);
        Swal.fire({
            title: "Error",
            text: error.message,
            icon: "error",
            confirmButtonColor: "#3085d6",
            showConfirmButton: true
        });
    }
}



// Make the function accessible globally
window.handleAddToCart = handleAddToCart;

// Add click handlers to all add-to-cart buttons
document.querySelectorAll('.btn-cart').forEach(button => {
    button.addEventListener('click', function(e) {
        e.preventDefault();
        const productId = this.dataset.productId;
        const selectedSize = sizeSelect?.value;
        const quantity = parseInt(qtyInput?.value) || 0;
        handleAddToCart(productId, selectedSize, quantity);
    });
});














    // Image zoom functionality
    const imageContainer = document.querySelector('.imf');
    if (imageContainer) {
        let x, y, width, height;

        imageContainer.addEventListener('mouseenter', () => {
            const size = imageContainer.getBoundingClientRect();
            x = size.x;
            y = size.y;
            width = size.width;
            height = size.height;
        });

        imageContainer.addEventListener('mousemove', (e) => {
            const horizontal = ((e.clientX - x) / width) * 100;
            const vertical = ((e.clientY - y) / height) * 100;
            imageContainer.style.setProperty('--x', `${horizontal}%`);
            imageContainer.style.setProperty('--y', `${vertical}%`);
        });
    }

    // Thumbnail gallery
    const thumbnails = document.querySelectorAll('.product-image-gallery .product-gallery-item img');
    thumbnails.forEach(thumbnail => {
        thumbnail.addEventListener('click', (e) => {
            e.preventDefault();
            const mainImage = document.querySelector('.product-main-image img');
            const newSrc = e.target.src;
            
            mainImage.src = newSrc;
            mainImage.setAttribute('data-zoom-image', newSrc);

            thumbnails.forEach(thumb => {
                thumb.parentElement.classList.remove('active');
            });
            e.target.parentElement.classList.add('active');
        });
    });
});
//         document.addEventListener("DOMContentLoaded", function() {
           
//             if (typeof jQuery !== 'undefined' && typeof jQuery.fn.owlCarousel !== 'undefined') {
//                 const carouselElement = $('.products-carousel');
                
//                 if (carouselElement.length > 0) {
//                     carouselElement.owlCarousel({
//                         loop: true,
//                         margin: 20,
//                         nav: true,
//                         navText: ['<i class="icon-angle-left"></i>', '<i class="icon-angle-right"></i>'],
//                         dots: false,
//                         responsive: {
//                             0: { items: 1 },
//                             576: { items: 2 },
//                             992: { items: 3 },
//                             1200: { items: 4 }
//                         },
//                         autoplay: false
//                     });
                
//                 }
//             }

//             // Size and Stock Management
//             const sizeSelect = document.getElementById("size");
//             if (sizeSelect) {
//                 sizeSelect.addEventListener("change", function() {
//                     const selectedSize = this.value;
//                     const stockData = JSON.parse(document.getElementById("stock-data").textContent);
//                     const qtyInput = document.getElementById("qty");
//                     const stockMessage = document.getElementById("stock-message");

//                     if (stockData[selectedSize] > 0) {
//                         qtyInput.value = 1;
//                         qtyInput.max = stockData[selectedSize];
//                         qtyInput.disabled = false;
//                         stockMessage.textContent = "";
//                     } else {
//                         qtyInput.value = 0;
//                         qtyInput.disabled = true;
//                         stockMessage.textContent = "Selected size is out of stock!";
//                     }
//                 });
//             }


//                 imageContainer.addEventListener('mousemove', (e) => {
//                     const horizontal = ((e.clientX - x) / width) * 100;
//                     const vertical = ((e.clientY - y) / height) * 100;
                    
//                     imageContainer.style.setProperty('--x', `${horizontal}%`);
//                     imageContainer.style.setProperty('--y', `${vertical}%`);
//                 });
//             }


//             // Cart Functionality
//             const addToCartButton = document.querySelector('.btn-cart');
//             if (addToCartButton) {
//                 addToCartButton.addEventListener('click', async (e) => {
//                     e.preventDefault();
                    
//                     const productId = addToCartButton.dataset.productId;
//                     const selectedSize = document.getElementById('size').value;
//                     const quantity = parseInt(document.getElementById('qty').value);

//                     if (!selectedSize) {
//                         alert('Please select a size');
//                         return;
//                     }

//                     if (!quantity || quantity < 1) {
//                         alert('Please select a valid quantity');
//                         return;
//                     }

//                     try {
//                         const response = await fetch('/cart/add', {
//                             method: 'POST',
//                             headers: {
//                                 'Content-Type': 'application/json'
//                             },
//                             body: JSON.stringify({
//                                 productId,
//                                 size: selectedSize,
//                                 quantity
//                             })
//                         });

//                         const data = await response.json();
//                         if (data.success) {
//                             alert('Product added to cart successfully!');
                         
//                             const cartCount = document.querySelector('.cart-count');
//                             if (cartCount) {
//                                 cartCount.textContent = data.cartCount;
//                             }
//                         } else {
//                             alert(data.message || 'Failed to add product to cart');
//                         }
//                     } catch (error) {
//                         console.error('Error adding to cart:', error);
//                         alert('Failed to add product to cart');
//                     }
//                 });
//             }
//         });

//         //cart
//      // Add to Cart functionality
// document.addEventListener('DOMContentLoaded', () => {
//     document.querySelectorAll('.btn-cart').forEach(button => {
//         button.addEventListener('click', async (e) => {
//             e.preventDefault();
            
//             const productId = button.dataset.productId;
//             const selectedSize = document.getElementById('size')?.value;
//             const quantity = parseInt(document.getElementById('qty')?.value) || 1;

//             // Validate size selection
//             if (!selectedSize) {
//                 Swal.fire({
//                     title: "Size Required",
//                     text: "Please select a size before adding to cart",
//                     icon: "warning",
//                     confirmButtonColor: "#3085d6"
//                 });
//                 return;
//             }

//             // Validate quantity
//             if (!quantity || quantity < 1) {
//                 Swal.fire({
//                     title: "Invalid Quantity",
//                     text: "Please select a valid quantity",
//                     icon: "warning",
//                     confirmButtonColor: "#3085d6"
//                 });
//                 return;
//             }

//             try {
//                 const response = await fetch('/add-to-cart', {
//                     method: 'POST',
//                     headers: { 'Content-Type': 'application/json' },
//                     body: JSON.stringify({ productId, size: selectedSize, quantity })
//                 });

//                 const data = await response.json();

//                 // Show appropriate SweetAlert based on response
//                 if (data.alert) {
//                     Swal.fire({
//                         title: data.alert.title,
//                         text: data.alert.text,
//                         icon: data.alert.icon,
//                         confirmButtonColor: "#3085d6",
//                         timer: data.success ? 2000 : undefined,
//                         timerProgressBar: data.success
//                     });

//                     // Update cart count if success
//                     if (data.success) {
//                         const cartCount = document.querySelector('.cart-count');
//                         if (cartCount) {
//                             cartCount.textContent = data.cartCount;
//                         }
//                     }
//                 }
//             } catch (error) {
//                 console.error('Error:', error);
//                 Swal.fire({
//                     title: "Error",
//                     text: "Something went wrong! Please try again.",
//                     icon: "error",
//                     confirmButtonColor: "#3085d6"
//                 });
//             }
//         });
//     });
// });

// // Stock validation with SweetAlert
// function validateStock(quantity, availableStock, maxPurchaseLimit) {
//     if (quantity > maxPurchaseLimit) {
//         Swal.fire({
//             title: "Purchase Limit Exceeded",
//             text: `You can only purchase up to ${maxPurchaseLimit} items per order`,
//             icon: "warning",
//             confirmButtonColor: "#3085d6"
//         });
//         return false;
//     }
    
//     if (quantity > availableStock) {
//         Swal.fire({
//             title: "Insufficient Stock",
//             text: `Only ${availableStock} items available in stock`,
//             icon: "warning",
//             confirmButtonColor: "#3085d6"
//         });
//         return false;
//     }
    
//     return true;
// }

// document.addEventListener('DOMContentLoaded', () => {
//     // Stock management initialization
//     const stockData = JSON.parse(document.getElementById('stock-data').textContent);
//     const sizeSelect = document.getElementById('size');
//     const qtyInput = document.getElementById('qty');
//     const stockInput = document.getElementById('stock');
//     const stockMessage = document.getElementById('stock-message');
//     const MAX_PURCHASE_LIMIT = 10;

//     function showStockAlert(message, icon = "warning") {
//         Swal.fire({
//             title: icon === "error" ? "Error" : "Warning",
//             text: message,
//             icon: icon,
//             confirmButtonColor: "#3085d6"
//         });
//     }

//     // Size selection handler
//     sizeSelect?.addEventListener('change', function() {
//         let selectedSize = sizeSelect.value;
//         let availableStock = stockData[selectedSize] || 0;

//         stockInput.value = availableStock;

//         if (availableStock > 0) {
//             qtyInput.disabled = false;
//             qtyInput.max = Math.min(availableStock, MAX_PURCHASE_LIMIT);
//             qtyInput.value = 1;
//             stockMessage.textContent = "";
//         } else {
//             qtyInput.disabled = true;
//             qtyInput.value = 0;
//             stockMessage.textContent = "Out of stock!";
//         }
//     });

//     // Quantity input handler
//     qtyInput?.addEventListener('input', function() {
//         if (!sizeSelect.value) {
//             showStockAlert("Please select a size first", "error");
//             this.value = 0;
//             return;
//         }

//         let qty = parseInt(this.value) || 0;
//         let selectedSize = sizeSelect.value;
//         let availableStock = stockData[selectedSize] || 0;

//         if (qty > MAX_PURCHASE_LIMIT) {
//             this.value = MAX_PURCHASE_LIMIT;
//             showStockAlert(`You can only purchase up to ${MAX_PURCHASE_LIMIT} items per order.`);
//         } else if (qty > availableStock) {
//             this.value = availableStock;
//             showStockAlert(`Only ${availableStock} items available in stock.`);
//         }

//         stockMessage.textContent = qty === MAX_PURCHASE_LIMIT ? "Maximum purchase limit reached!" :
//                                  qty === availableStock ? "Maximum available stock reached!" : "";
//     });

//     // Add to cart functionality
//     document.querySelectorAll('.btn-cart').forEach(button => {
//         button.addEventListener('click', async (e) => {
//             e.preventDefault();
            
//             const productId = button.dataset.productId;
//             const selectedSize = sizeSelect?.value;
//             const quantity = parseInt(qtyInput?.value) || 0;
//             const availableStock = stockData[selectedSize] || 0;

//             // Validation checks
//             if (!selectedSize) {
//                 showStockAlert("Please select a size before adding to cart.", "error");
//                 return;
//             }

//             if (quantity === 0) {
//                 showStockAlert("Please select a valid quantity.", "error");
//                 return;
//             }

//             if (quantity > availableStock) {
//                 showStockAlert(`Only ${availableStock} items available in stock.`, "error");
//                 return;
//             }

//             if (quantity > MAX_PURCHASE_LIMIT) {
//                 showStockAlert(`You can only purchase up to ${MAX_PURCHASE_LIMIT} items per order.`, "error");
//                 return;
//             }

//             try {
//                 const response = await fetch('/add-to-cart', {
//                     method: 'POST',
//                     headers: { 'Content-Type': 'application/json' },
//                     body: JSON.stringify({ productId, size: selectedSize, quantity })
//                 });

//                 const data = await response.json();

//                 if (data.alert) {
//                     Swal.fire({
//                         title: data.alert.title,
//                         text: data.alert.text,
//                         icon: data.alert.icon,
//                         confirmButtonColor: "#3085d6",
//                         timer: data.success ? 2000 : undefined,
//                         timerProgressBar: data.success
//                     });

//                     if (data.success) {
//                         const cartCount = document.querySelector('.cart-count');
//                         if (cartCount) {
//                             cartCount.textContent = data.cartCount;
//                         }
//                     }
//                 }
//             } catch (error) {
//                 console.error('Error:', error);
//                 showStockAlert("Something went wrong! Please try again.", "error");
//             }
//         });
//     });
// });
//     const stockData = JSON.parse(document.getElementById('stock-data').textContent);
//     const sizeSelect = document.getElementById('size');
//     const qtyInput = document.getElementById('qty');
//     const stockInput = document.getElementById('stock');
//     const stockMessage = document.getElementById('stock-message');
//     const cartButton = document.querySelector('.btn-cart');
//     const MAX_PURCHASE_LIMIT = 10;

//     function showStockAlert(message, availableStock) {
//         Swal.fire({
//             icon: "warning",
//             title: "Purchase Limit Reached",
//             text: message,
//             confirmButtonColor: "#d33",
//             showConfirmButton: true
//         });
//     }

//     sizeSelect.addEventListener('change', function () {
//         let selectedSize = sizeSelect.value;
//         let availableStock = stockData[selectedSize] || 0;

//         stockInput.value = availableStock;

//         if (availableStock > 0) {
//             qtyInput.disabled = false;
//             // Set max to either stock limit or purchase limit, whichever is lower
//             qtyInput.max = Math.min(availableStock, MAX_PURCHASE_LIMIT);
//             qtyInput.value = 1;
//             stockMessage.textContent = "";
//         } else {
//             qtyInput.disabled = true;
//             qtyInput.value = 0;
//             stockMessage.textContent = "Out of stock!";
//         }
//     });

//     qtyInput.addEventListener('input', function () {
//         if (!sizeSelect.value) {
//             Swal.fire({
//                 icon: "error",
//                 title: "Size Not Selected",
//                 text: "Please select a size first",
//                 confirmButtonColor: "#d33"
//             });
//             this.value = 0;
//             return;
//         }

//         let qty = parseInt(this.value) || 0;
//         let selectedSize = sizeSelect.value;
//         let availableStock = stockData[selectedSize] || 0;

//         // Check against both MAX_PURCHASE_LIMIT and available stock
//         if (qty > MAX_PURCHASE_LIMIT) {
//             this.value = MAX_PURCHASE_LIMIT;
//             showStockAlert(`You can only purchase up to ${MAX_PURCHASE_LIMIT} items per order.`, availableStock);
//         } else if (qty > availableStock) {
//             this.value = availableStock;
//             showStockAlert(`Only ${availableStock} items available in stock.`, availableStock);
//         }

//         // Update stock message
//         if (qty === MAX_PURCHASE_LIMIT) {
//             stockMessage.textContent = "Maximum purchase limit reached!";
//         } else if (qty === availableStock) {
//             stockMessage.textContent = "Maximum available stock reached!";
//         } else {
//             stockMessage.textContent = "";
//         }
//     });

//     cartButton.addEventListener('click', async (e) => {
//         e.preventDefault();

//         const selectedSize = sizeSelect.value;
//         const quantity = parseInt(qtyInput.value) || 0;
//         const availableStock = stockData[selectedSize] || 0;

//         if (!selectedSize) {
//             Swal.fire({
//                 icon: "error",
//                 title: "Size Not Selected",
//                 text: "Please select a size before adding to cart.",
//                 confirmButtonColor: "#d33"
//             });
//             return;
//         }

//         if (quantity === 0) {
//             Swal.fire({
//                 icon: "error",
//                 title: "Invalid Quantity",
//                 text: "Please select a valid quantity.",
//                 confirmButtonColor: "#d33"
//             });
//             return;
//         }

//         if (quantity > availableStock) {
//             Swal.fire({
//                 icon: "error",
//                 title: "Not Enough Stock",
//                 text: `Only ${availableStock} items available in stock.`,
//                 confirmButtonColor: "#d33"
//             });
//             return;
//         }

//         if (quantity > MAX_PURCHASE_LIMIT) {
//             Swal.fire({
//                 icon: "error",
//                 title: "Purchase Limit Exceeded",
//                 text: `You can only purchase up to ${MAX_PURCHASE_LIMIT} items per order.`,
//                 confirmButtonColor: "#d33"
//             });
//             return;
//         }

//         // Proceed with your existing add to cart logic here
//     });


//     // Define the addCart function globally
// function addCart(event, productId) {
//     event.preventDefault();
    
//     const button = event.target.closest('.btn-cart');
//     if (!button) return;

//     const sizeSelect = document.getElementById('size');
//     const qtyInput = document.getElementById('qty');
//     const selectedSize = sizeSelect?.value;
//     const quantity = parseInt(qtyInput?.value) || 0;

//     handleAddToCart(productId, selectedSize, quantity);
// }

// document.addEventListener('DOMContentLoaded', () => {
//     // Stock management initialization
//     const stockData = JSON.parse(document.getElementById('stock-data')?.textContent || '{}');
//     const sizeSelect = document.getElementById('size');
//     const qtyInput = document.getElementById('qty');
//     const stockInput = document.getElementById('stock');
//     const stockMessage = document.getElementById('stock-message');
//     const MAX_PURCHASE_LIMIT = 10;

//     function showStockAlert(message, icon = "warning") {
//         Swal.fire({
//             title: icon === "error" ? "Error" : "Warning",
//             text: message,
//             icon: icon,
//             confirmButtonColor: "#3085d6"
//         });
//     }

//     // Size selection handler
//     sizeSelect?.addEventListener('change', function() {
//         let selectedSize = sizeSelect.value;
//         let availableStock = stockData[selectedSize] || 0;

//         if (stockInput) stockInput.value = availableStock;

//         if (availableStock > 0) {
//             qtyInput.disabled = false;
//             qtyInput.max = Math.min(availableStock, MAX_PURCHASE_LIMIT);
//             qtyInput.value = 1;
//             if (stockMessage) stockMessage.textContent = "";
//         } else {
//             qtyInput.disabled = true;
//             qtyInput.value = 0;
//             if (stockMessage) stockMessage.textContent = "Out of stock!";
//         }
//     });

//     // Quantity input handler
//     qtyInput?.addEventListener('input', function() {
//         if (!sizeSelect.value) {
//             showStockAlert("Please select a size first", "error");
//             this.value = 0;
//             return;
//         }

//         let qty = parseInt(this.value) || 0;
//         let selectedSize = sizeSelect.value;
//         let availableStock = stockData[selectedSize] || 0;

//         if (qty > MAX_PURCHASE_LIMIT) {
//             this.value = MAX_PURCHASE_LIMIT;
//             showStockAlert(`You can only purchase up to ${MAX_PURCHASE_LIMIT} items per order.`);
//         } else if (qty > availableStock) {
//             this.value = availableStock;
//             showStockAlert(`Only ${availableStock} items available in stock.`);
//         }

//         if (stockMessage) {
//             stockMessage.textContent = qty === MAX_PURCHASE_LIMIT ? "Maximum purchase limit reached!" :
//                                      qty === availableStock ? "Maximum available stock reached!" : "";
//         }
//     });
// });

// // Separated add to cart handling function



// // Ensure functions run after the page loads
document.addEventListener('DOMContentLoaded', initializeStockCheck);
  
    </script>
   
   

<style>

    body::-webkit-scrollbar {

        width: 0;
    }

    .product-gallery-item:before {

        opacity: 0;
        visibility: hidden !important;
        border: 0.1rem solid #c96;

    }

    .imf {

        overflow: hidden;
    }

    .imf img {

        transform: scale(var(--zoom, 1));
        object-fit: cover;
        transform-origin: var(--x) var(--y);
        transition: cubic-bezier(0.18, 0.9, 0.33, 1.01) 1s;
        /* opacity: 0.3; */
    }

    .imf:hover {

        --zoom: 1.8;
        cursor: crosshair;

    }

</style>


</body>


<!-- molla/category.html  22 Nov 2019 10:02:52 GMT -->
</html>
