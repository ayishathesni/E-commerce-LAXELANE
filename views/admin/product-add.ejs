<%- include("../../views/partials/admin/header") %>
<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css">
</head>
<style>
   .error-message{
       color: red;
   }


       .thumbnails-container {
           display: flex;
           overflow-x: auto;
       }


       .thumbnail {
           margin-right: 10px;


       }
       .size-selection {
        border: 1px solid #dee2e6;
        padding: 1.5rem;
        border-radius: 0.375rem;
    }

    .size-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 1rem;
    }

    .size-item {
        padding: 0.5rem;
    }

    .error-message {
        color: #dc3545;
        font-size: 0.875rem;
        display: none;
    }

    .form-check-input {
        cursor: pointer;
    }

    .form-check-label {
        cursor: pointer;
        margin-left: 0.5rem;
    }

    .quantity-wrapper {
        flex: 1;
    }

    .checkbox-wrapper {
        min-width: 60px;
    }

    .gap-3 {
        gap: 1rem;
    }
</style>
   <section class="content-main">
       <div class="row">
           <div class="col-9">
               <div class="content-header">
                   <h2 class="content-title">Add New Product</h2>
               </div>
           </div>
           <div class="col-lg-6">
               <div class="card mb-4">
                   <div class="card-body">
                       <form method="post" action="/admin/addProducts" enctype="multipart/form-data"
                           onsubmit="return validateForm()">
                           <div class="mb-4">
                               <label for="product_name" class="form-label">Product Name</label>
                               <input type="text" placeholder="Type here" name="productName"
                                   class="form-control border" id="product_name">
                               <div id="productName-error" class="error-message"></div>
                           </div>
                           <div class="mb-4">
                               <label class="form-label">Full description</label>
                               <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control border"
                                   rows="4"></textarea>
                               <div id="description-error" class="error-message"></div>
                           </div>
                           <div class="row">
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Regular price</label>
                                       <input placeholder="$" name="regularPrice" type="text"
                                           class="form-control border">
                                           <div id="regularPrice-error" class="error-message"></div>
                                   </div>
                               </div>
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Sale price</label>
                                       <input placeholder="$" name="salePrice" type="text" class="form-control border">
                                      
                                   </div>
                                   <div id="salePrice-error" class="error-message"></div>
                               </div>
                            
                           <div class="row">
                              
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Color</label>
                                       <input  name="color" type="text" class="form-control border">
                                   </div>
                                   <div id="color-error" class="error-message"></div>
                               </div>
                            <!-- Available Sizes with Quantity -->
                            <div class="size-selection mb-4">
                                <label class="form-label">Available Sizes & Quantity</label>
                                
                                <!-- General size error message -->
                                <div id="size-error" class="error-message mb-2"></div>
                                
                                <!-- Size Grid Container -->
                                <div class="size-grid">
                                    <!-- XS Size -->
                                    <div class="size-item mb-3">
                                        <div class="d-flex align-items-center gap-3">
                                            <div class="checkbox-wrapper">
                                                <input class="form-check-input size-checkbox" 
                                                       type="checkbox" 
                                                       name="sizes[]" 
                                                       value="XS" 
                                                       id="sizeXS" 
                                                       onchange="toggleQuantity('XS')">
                                                <label class="form-check-label" for="sizeXS">XS</label>
                                            </div>
                                            <div class="quantity-wrapper">
                                                <input type="number" 
                                                       name="quantity_XS" 
                                                       id="quantityXS" 
                                                       class="form-control size-quantity" 
                                                       placeholder="Qty" 
                                                       min="1" 
                                                       style="display: none; width: 80px;">
                                                <div id="quantity-XS-error" class="error-message mt-1"></div>
                                            </div>
                                        </div>
                                    </div>
                            
                                    <!-- S Size -->
                                    <div class="size-item mb-3">
                                        <div class="d-flex align-items-center gap-3">
                                            <div class="checkbox-wrapper">
                                                <input class="form-check-input size-checkbox" 
                                                       type="checkbox" 
                                                       name="sizes[]" 
                                                       value="S" 
                                                       id="sizeS" 
                                                       onchange="toggleQuantity('S')">
                                                <label class="form-check-label" for="sizeS">S</label>
                                            </div>
                                            <div class="quantity-wrapper">
                                                <input type="number" 
                                                       name="quantity_S" 
                                                       id="quantityS" 
                                                       class="form-control size-quantity" 
                                                       placeholder="Qty" 
                                                       min="1" 
                                                       style="display: none; width: 80px;">
                                                <div id="quantity-S-error" class="error-message mt-1"></div>
                                            </div>
                                        </div>
                                    </div>
                            
                                    <!-- M Size -->
                                    <div class="size-item mb-3">
                                        <div class="d-flex align-items-center gap-3">
                                            <div class="checkbox-wrapper">
                                                <input class="form-check-input size-checkbox" 
                                                       type="checkbox" 
                                                       name="sizes[]" 
                                                       value="M" 
                                                       id="sizeM" 
                                                       onchange="toggleQuantity('M')">
                                                <label class="form-check-label" for="sizeM">M</label>
                                            </div>
                                            <div class="quantity-wrapper">
                                                <input type="number" 
                                                       name="quantity_M" 
                                                       id="quantityM" 
                                                       class="form-control size-quantity" 
                                                       placeholder="Qty" 
                                                       min="1" 
                                                       style="display: none; width: 80px;">
                                                <div id="quantity-M-error" class="error-message mt-1"></div>
                                            </div>
                                        </div>
                                    </div>
                            
                                    <!-- L Size -->
                                    <div class="size-item mb-3">
                                        <div class="d-flex align-items-center gap-3">
                                            <div class="checkbox-wrapper">
                                                <input class="form-check-input size-checkbox" 
                                                       type="checkbox" 
                                                       name="sizes[]" 
                                                       value="L" 
                                                       id="sizeL" 
                                                       onchange="toggleQuantity('L')">
                                                <label class="form-check-label" for="sizeL">L</label>
                                            </div>
                                            <div class="quantity-wrapper">
                                                <input type="number" 
                                                       name="quantity_L" 
                                                       id="quantityL" 
                                                       class="form-control size-quantity" 
                                                       placeholder="Qty" 
                                                       min="1" 
                                                       style="display: none; width: 80px;">
                                                <div id="quantity-L-error" class="error-message mt-1"></div>
                                            </div>
                                        </div>
                                    </div>
                            
                                    <!-- XL Size -->
                                    <div class="size-item mb-3">
                                        <div class="d-flex align-items-center gap-3">
                                            <div class="checkbox-wrapper">
                                                <input class="form-check-input size-checkbox" 
                                                       type="checkbox" 
                                                       name="sizes[]" 
                                                       value="XL" 
                                                       id="sizeXL" 
                                                       onchange="toggleQuantity('XL')">
                                                <label class="form-check-label" for="sizeXL">XL</label>
                                            </div>
                                            <div class="quantity-wrapper">
                                                <input type="number" 
                                                       name="quantity_XL" 
                                                       id="quantityXL" 
                                                       class="form-control size-quantity" 
                                                       placeholder="Qty" 
                                                       min="1" 
                                                       style="display: none; width: 80px;">
                                                <div id="quantity-XL-error" class="error-message mt-1"></div>
                                            </div>
                                        </div>
                                    </div>
                            
                                    <!-- XXL Size -->
                                    <div class="size-item mb-3">
                                        <div class="d-flex align-items-center gap-3">
                                            <div class="checkbox-wrapper">
                                                <input class="form-check-input size-checkbox" 
                                                       type="checkbox" 
                                                       name="sizes[]" 
                                                       value="XXL" 
                                                       id="sizeXXL" 
                                                       onchange="toggleQuantity('XXL')">
                                                <label class="form-check-label" for="sizeXXL">XXL</label>
                                            </div>
                                            <div class="quantity-wrapper">
                                                <input type="number" 
                                                       name="quantity_XXL" 
                                                       id="quantityXXL" 
                                                       class="form-control size-quantity" 
                                                       placeholder="Qty" 
                                                       min="1" 
                                                       style="display: none; width: 80px;">
                                                <div id="quantity-XXL-error" class="error-message mt-1"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                           
                           </div>
                           <div class="card mb-4">
                               <div class="card-body">
                                   <div class="row gx-2">
                                       <div class="col-sm-6 mb-3">
                                           <label class="form-label">Category</label>
                                           <select class="form-select border" style="width: 150px;" name="category">
                                            <%for(let i=0;i<cat.length;i++){%>

                                              
                                                   <option value="<%=cat[i].name%>">
                                                   
                                                    <%=cat[i].name%>
                                                   </option>
                                                  <%}%>
                                                 
                                                   
                                           </select>
                                           <div id="category-error" class="error-message"></div>
                                       </div>
                                   </div>
                               </div>
                           </div>
                           <div class="card mb-2">
                               <div class="card-header">
                                   <h4>Choose images</h4>
                               </div>
                               <div class="border row">
                                   <div id="addedImagesContainer" class="thumbnails-container"></div>
                               </div>
                               <div class="row">
                                   <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                       <img src="" alt="" id="imgView1">
                                                                   <input class="form-control" type="file" name="images" id="input1"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage1(event), viewImage(event, 1)">
                                                                       <div id="images-error" class="error-message"></div>
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg1" alt="">
                                                                   <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>
                                                          
                                                           <div class="row">
                                                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                   <img src="" alt="" id="imgView2">


                                                                   <input class="form-control" type="file" name="images" id="input2"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage2(event),viewImage(event, 2)">
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg2" alt="">
                                                                   <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>
                                                          
                                                           <div class="row">
                                                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                   <img src="" alt="" id="imgView3">


                                                                   <input class="form-control" type="file" name="images" id="input3"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage3(event),viewImage(event, 3)">
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg3" alt="">
                                                                   <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>
                                                          
                                                           <div class="row">
                                                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                   <img src="" alt="" id="imgView4">


                                                          
                                                                   <input class="form-control" type="file" name="images" id="input4"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage4(event),viewImage(event, 4)">
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg4" alt="">
                                                                   <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>
                          
                                                       </div>
                           </div>
                           <div>
                               <button class="btn btn-md rounded font-sm hover-up"  type="button" onclick="validateAndSubmit()">Publish</button>
                           </div>
                       </form>
                   </div>
               </div>
           </div>
       </div>
   </section>

<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
   <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>  

   
   <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
   <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

   <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

<script>


  
// Image handling functions
function viewImage1(event) {
    document.getElementById("imgView1").src = URL.createObjectURL(event.target.files[0]);
}

function viewImage2(event) {
    document.getElementById("imgView2").src = URL.createObjectURL(event.target.files[0]);
}

function viewImage3(event) {
    document.getElementById("imgView3").src = URL.createObjectURL(event.target.files[0]);
}

function viewImage4(event) {
    document.getElementById("imgView4").src = URL.createObjectURL(event.target.files[0]);
}


function toggleQuantity(size) {
    let checkbox = document.getElementById(`size${size}`);
    let quantityInput = document.getElementById(`quantity${size}`);
    
    if (checkbox.checked) {
        quantityInput.style.display = "block";
        quantityInput.required = true;
    } else {
        quantityInput.style.display = "none";
        quantityInput.required = false;
        quantityInput.value = "";
    }
}


function viewImage(event, index) {
    let input = event.target;
    let reader = new FileReader();
    
    reader.onload = function() {
        let dataURL = reader.result;
        let image = document.getElementById("imgView" + index);
        image.src = dataURL;
        
        let cropper = new Cropper(image, {
            aspectRatio: 1,
            viewMode: 1,
            guides: true,
            background: false,
            autoCropArea: 1,
            zoomable: true
        });

        let cropperContainer = document.querySelector("#croppedImg" + index).parentNode;
        cropperContainer.style.display = 'block';

        let saveButton = document.querySelector("#saveButton" + index);
        saveButton.addEventListener('click', async function() {
            let croppedCanvas = cropper.getCroppedCanvas();
            let croppedImage = document.getElementById("croppedImg" + index);
            croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);

            let timestamp = new Date().getTime();
            let fileName = `cropped_img_${timestamp}.${index}.png`;

            await croppedCanvas.toBlob(blob => {
                let input = document.getElementById('input' + index);
                let imgFile = new File([blob], fileName, { type: blob.type });
                const fileList = new DataTransfer();
                fileList.items.add(imgFile);
                input.files = fileList.files;
            });

            cropperContainer.style.display = 'none';
            cropper.destroy();
        });
    };

    reader.readAsDataURL(input.files[0]);
}

// Handle added images thumbnails
function handleFileSelect(event) {
    const addedImagesContainer = document.getElementById("addedImagesContainer");
    addedImagesContainer.innerHTML = "";
    const files = event.target.files;
    
    for (let i = 0; i < files.length; i++) {
        const file = files[i];
        const thumbnail = document.createElement("div");
        thumbnail.classList.add("thumbnail");

        const img = document.createElement("img");
        img.src = URL.createObjectURL(file);
        img.alt = "thumbnail";
        img.style.width = "50px";
        img.style.height = "auto";

        const removeIcon = document.createElement("span");
        removeIcon.classList.add("remove-icon");
        removeIcon.innerHTML = "&times;";
        removeIcon.addEventListener("click", function() {
            thumbnail.remove();
        });

        thumbnail.appendChild(img);
        thumbnail.appendChild(removeIcon);
        addedImagesContainer.appendChild(thumbnail);
    }
}

// Form validation and submission
function validateAndSubmit() {
    if (validateForm()) {
        const form = document.querySelector('form');
        const formData = new FormData(form);
        
     
        const sizesData = [];
        const sizes = ["XS", "S", "M", "L", "XL", "XXL"];
        
        sizes.forEach(size => {
            const checkbox = document.getElementById(`size${size}`);
            const quantityInput = document.getElementById(`quantity${size}`);
            
            if (checkbox && checkbox.checked && quantityInput && quantityInput.value) {
                sizesData.push({
                    size: size,
                    quantity: parseInt(quantityInput.value)
                });
            }
        });
     
        formData.delete('sizes[]');
        formData.append('sizes', JSON.stringify(sizesData));

    
        fetch('/admin/addProducts', {
            method: 'POST',
            body: formData
        })
        .then(response => {
          
            const contentType = response.headers.get('content-type');
            if (contentType && contentType.includes('application/json')) {
                return response.json();
            }
            
            if (response.ok) {
                window.location.href = '/admin/products';
                return;
            }
            
            throw new Error('Server returned invalid response');
        })
        .then(data => {
            if (data) {
                if (data.success) {
                    window.location.href = '/admin/products';
                } else {
                    displayErrorMessage('form-error', data.message || 'Error adding product');
                }
            }
        })
        .catch(error => {
            displayErrorMessage('form-error', 'An error occurred while submitting the form. Please try again.');
            console.error('Error:', error);
        });
    }
}

function validateForm() {
    clearErrorMessages();
    let isValid = true;

  
    const name = document.getElementsByName('productName')[0].value;
    const description = document.getElementById('descriptionid').value;
    const price = document.getElementsByName('regularPrice')[0].value;
    const salePrice = document.getElementsByName('salePrice')[0].value;
    const color = document.getElementsByName('color')[0].value;
    const image1 = document.getElementById('input1').files;

 
    if (!name.trim()) {
        displayErrorMessage('productName-error', 'Please enter a product name');
        isValid = false;
    } else if (!/^[a-zA-Z0-9\s'-]{3,50}$/.test(name.trim())) {
        displayErrorMessage('productName-error', 'Invalid product name format');
        isValid = false;
    }

    // Validate description
    if (!description.trim()) {
        displayErrorMessage('description-error', 'Please enter a description');
        isValid = false;
    }

    // Validate regular price
    if (!price || isNaN(price) || parseFloat(price) <= 0) {
        displayErrorMessage('regularPrice-error', 'Please enter a valid price');
        isValid = false;
    }

    // Validate sale price 
    if (salePrice) {
        if (isNaN(salePrice) || parseFloat(salePrice) <= 0) {
            displayErrorMessage('salePrice-error', 'Please enter a valid sale price');
            isValid = false;
        } else if (parseFloat(salePrice) >= parseFloat(price)) {
            displayErrorMessage('salePrice-error', 'Sale price must be less than regular price');
            isValid = false;
        }
    }

    // Validate color
    if (!color.trim()) {
        displayErrorMessage('color-error', 'Please enter a color');
        isValid = false;
    }

    // Validate primary image
    if (!image1 || image1.length === 0) {
        displayErrorMessage('images-error', 'Please select at least one image');
        isValid = false;
    }

    // Validate sizes
    let hasSelectedSize = false;
    const sizes = ["XS", "S", "M", "L", "XL", "XXL"];
    
    sizes.forEach(size => {
        const checkbox = document.getElementById(`size${size}`);
        const quantityInput = document.getElementById(`quantity${size}`);
        
        if (checkbox && checkbox.checked) {
            hasSelectedSize = true;
            if (!quantityInput || !quantityInput.value || parseInt(quantityInput.value) <= 0) {
                displayErrorMessage(`quantity-${size}-error`, `Please enter a valid quantity for size ${size}`);
                isValid = false;
            }
        }
    });

    if (!hasSelectedSize) {
        displayErrorMessage('size-error', 'Please select at least one size');
        isValid = false;
    }

    return isValid;
}

function displayErrorMessage(elementId, message) {
    const errorElement = document.getElementById(elementId);
    if (errorElement) {
        errorElement.innerText = message;
        errorElement.style.display = 'block';
    } else {
      
        alert(message);
    }
}

function clearErrorMessages() {
    const errorElements = document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach(element => {
        element.innerText = '';
        element.style.display = 'none';
    });
}


document.addEventListener('DOMContentLoaded', function() {
 
    if (document.getElementById("input")) {
        document.getElementById("input").addEventListener("change", handleFileSelect);
    }
});
</script>
     
<%- include("../../views/partials/admin/footer") %>



